spring:
  application:
    name: "@project.name@"
  banner:
    # https://www.ascii-art-generator.org/
    location: classpath:/gateway-banner.txt
  profiles:
    active:
      - ${SPRING_PROFILES_ACTIVE:loc}
  config:
    import: "optional:configserver:${CONFIG_SERVER_URI:}"
  # https://cloud.spring.io/spring-cloud-gateway/reference/html/
  cloud:
    config:
      enabled: true
      retry:
        max-attempts: 10
        max-interval: 10000
        initial-interval: 1000
        multiplier: 1.1
      discovery:
        enabled: true
        service-id: "camila-config"
      label: main
      profile: ${SPRING_PROFILES_ACTIVE}
      name: ${spring.application.name}
      allow-override: true
    loadbalancer:
      health-check:
        initial-delay: 5s
        interval: 30s
      retry:
        backoff:
          enabled: true
    discovery:
      enabled: true
    gateway:
      metrics:
        enabled: true
      routes:
        - id: products
          uri: ${PRODUCT_SERVER_URL:http://localhost:8080/}
          predicates:
            - Path=/product-*/api/**
          metadata:
            cors:
              allowedOrigins: '*'
              allowedMethods: '*'
              allowedHeaders: '*'
              maxAge: 30
          filters:
            - name: RemoveRequestHeader
              args:
                name: Cookie
            - name: TokenRelay
            - name: CircuitBreaker
              args:
                name: fallbackCircuitBreaker
                fallbackUri: forward:/fallback
                # ReactiveResilience4JCircuitBreakerFactory.java (review)
                minimumNumberOfCalls: 10
            - name: Retry
              args:
                retries: 3
                statuses: BAD_REQUEST, INTERNAL_SERVER_ERROR, BAD_GATEWAY, GATEWAY_TIMEOUT
                methods: GET, HEAD, OPTIONS
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 50ms
                  factor: 2
                  basedOnPreviousValue: false
            - name: RequestSize
              args:
                maxSize: 5000
      globalcors:
        add-to-simple-url-handler-mapping: true
      filter:
        request-rate-limiter:
          enabled: true
        circuit-breaker:
          enabled: true
        retry:
          enabled: true
        fallback-headers:
          enabled: true
  main:
    web-application-type: reactive
    lazy-initialization: true

info:
  app:
    name: "@project.name@"
    version: "@project.version@"

# openapi
springdoc:
  swagger-ui:
    filter: true
    show-common-extensions: true
    doc-expansion: none
    operations-sorter: method
    deep-linking: true
    display-request-duration: true
    defaultModelsExpandDepth: 1
    tagsSorter: alpha
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - name: API Gateway Service
        url: /v3/api-docs
      - name: API Products Service
        url: /product-dev/api/v3/api-docs
  show-actuator: true
  api-docs:
    enabled: true
    groups:
      enabled: true
    resolve-schema-properties: true

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      enabled: true
      show-values: ALWAYS
      cache:
        time-to-live: 60s
    info:
      enabled: true
      cache:
        time-to-live: 3600s
    beans:
      enabled: true
      cache:
        time-to-live: 10s
    health:
      enabled: true
      show-details: ALWAYS
      show-components: ALWAYS
    configprops:
      enabled: true
      show-values: ALWAYS
    shutdown:
      enabled: true
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
    git:
      enabled: true
      mode: full
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}
      connect-timeout: 10s
      read-timeout: 30s

server:
  port: ${PORT:8090}
  forward-headers-strategy: framework

# traces
logging:
  level:
    org.springframework: debug
    org.springframework.boot: debug
    org.springframework.security: debug
    org.springframework.security.oauth2: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"

# discovery
eureka:
  client:
    enabled: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    preferIpAddress: true
    statusPageUrlPath: actuator/info
    healthCheckUrlPath: actuator/health
    nonSecurePortEnabled: true
    leaseRenewalIntervalInSeconds: 15

---
###### Integration properties ######
spring:
  config:
    activate:
      on-profile: "!loc"
  security:
    oauth2:
      client:
        provider:
          camila-keycloak:
            issuer-uri: "${KEYCLOAK_URL:http://localhost:9191}/realms/${KEYCLOAK_REALM:camila-realm}"
            token-uri: "${KEYCLOAK_URL:http://localhost:9191}/realms/${KEYCLOAK_REALM:camila-realm}/protocol/openid-connect/token"
            authorization-uri: "${KEYCLOAK_URL:http://localhost:9191}/realms/${KEYCLOAK_REALM:camila-realm}/protocol/openid-connect/auth"
            jwk-set-uri: "${KEYCLOAK_URL:http://localhost:9191}/realms/${KEYCLOAK_REALM:camila-realm}/protocol/openid-connect/certs"
            user-info-uri: "${KEYCLOAK_URL:http://localhost:9191}/realms/${KEYCLOAK_REALM:camila-realm}/protocol/openid-connect/userinfo"
            user-name-attribute: preferred_username
        registration:
          gateway:
            provider: camila-keycloak
            client-id: camila-client
            client-secret: Fuvf8XyBDXxU57NAOOFZVvdUIPmGgiyE
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}"
            scope: profile, openid, email, roles, web-origins, camila/read, camila/write
