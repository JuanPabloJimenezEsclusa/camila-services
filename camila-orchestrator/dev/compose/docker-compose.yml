# dev services

services:
  config:
    image: docker.io/library/camila-config:1.0.0
    container_name: camila-config
    hostname: config
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "1024m"
          cpus: "2"
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: "native"
    ports:
      - "5045:5005"
      - "8888:8888"
    expose:
      - 5045
      - 8888
    volumes:
      - camila_config_tmp:/tmp
    healthcheck:
      test: ps aux | grep java || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      camila_product_network:
        ipv4_address: 172.18.0.254
  discovery:
    image: docker.io/library/camila-discovery:1.0.0
    container_name: camila-discovery
    hostname: discovery
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "1024m"
          cpus: "2"
    env_file:
      - .env
    ports:
      - "5025:5005"
      - "8761:8761"
    expose:
      - 5025
      - 8761
    volumes:
      - camila_discovery_tmp:/tmp
    depends_on:
      - config
    links:
      - config
    healthcheck:
      test: ps aux | grep java || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      camila_product_network:
  gateway:
    image: docker.io/library/camila-gateway:1.0.0
    container_name: camila-gateway
    hostname: gateway
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "1024m"
          cpus: "2"
    env_file:
      - .env
    ports:
      - "5015:5005"
      - "8090:8090"
    expose:
      - 5015
      - 8090
    depends_on:
      discovery:
        condition: service_healthy
      keycloak:
        condition: service_started
    healthcheck:
      test: ps aux | grep java || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    links:
      - discovery
      - keycloak
    volumes:
      - camila_gateway_tmp:/tmp
    networks:
      camila_product_network:
  admin:
    image: docker.io/library/camila-admin:1.0.0
    container_name: camila-admin
    hostname: admin
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "1024m"
          cpus: "2"
    env_file:
      - .env
    ports:
      - "5035:5005"
      - "8100:8100"
    expose:
      - 5035
      - 8100
    depends_on:
      discovery:
        condition: service_healthy
    volumes:
      - camila_admin_tmp:/tmp
    healthcheck:
      test: ps aux | grep java || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    links:
      - discovery
      - config
    networks:
      camila_product_network:
  mongodb:
    image: mongodb/mongodb-community-server:7.0.8-ubi8
    container_name: camila-product-db
    hostname: mongodb
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "3072m"
          cpus: "2"
    env_file:
      - .env
    ports: 
      - "27017-27019:27017-27019"
    expose:
      - 27017
      - 27018
      - 27019
    volumes:
      - camila_product_mongodb_data:/data/db
      - ./data/mongodb/:/docker-entrypoint-initdb.d/:ro
    healthcheck:
      test: ps aux | mongod || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks: 
      camila_product_network:
  couchbase:
    image: couchbase/server:community-7.6.1
    container_name: camila-couchbase-db
    hostname: couchbase
    restart: "on-failure"
    stdin_open: true
    tty: true
    entrypoint: [""]
    command: sh -c "/opt/couchbase/init/init-cbserver.sh"
    deploy:
      resources:
        limits:
          memory: "4096m"
          cpus: "4"
    env_file:
      - .env
    ports:
      - "8091-8096:8091-8096"
      - "11210-11211:11210-11211"
    expose:
      - 8091
      - 11210
    volumes:
      - camila_product_couchbase_data:/opt/couchbase/var
      - ./data/couchbase/:/opt/couchbase/init:rw
    healthcheck:
      test: ps aux | grep init-cbserver.sh || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      camila_product_network:
  backend-product:
    image: docker.io/library/camila-product-api:1.0.0
    restart: "on-failure"
    hostname: backend-product
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          memory: "1024m"
          cpus: "1"
    ports:
      - "8080-8081:8080"
    expose:
      - 8080-8081
    depends_on:
      discovery:
        condition: service_healthy
      mongodb:
        condition: service_started
      couchbase:
        condition: service_started
    links:
      - discovery
      - mongodb
      - couchbase
    volumes:
      - camila_product_backend_tmp:/tmp
    networks:
      camila_product_network:
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    hostname: prometheus
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "512m"
          cpus: "1"
    env_file:
      - .env
    ports:
      - "9090:9090"
    expose:
      - 9090
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: ps aux | prometheus || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      camila_product_network:
  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    hostname: grafana
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "512m"
          cpus: "1"
    env_file:
      - .env
    ports:
      - "3000:3000"
    expose:
      - 3000
    volumes:
      - ./monitoring/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    links:
      - prometheus
    healthcheck:
      test: ps aux | grafana || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    networks:
      camila_product_network:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: |
      start-dev --hostname keycloak --http-port 9191 --import-realm
    container_name: keycloak
    hostname: keycloak
    deploy:
      resources:
        limits:
          memory: "1024m"
          cpus: "2"
    restart: "on-failure"
    env_file:
      - .env
    ports:
      - "9191:9191"
    expose:
      - 9191
    volumes:
      - ./authorization:/opt/keycloak/data/import
      - keycloak_config:/opt/keycloak/config
      - keycloak_data:/opt/keycloak/data
    networks:
      camila_product_network:
  zipkin:
    # https://github.com/openzipkin/zipkin#quick-start
    image: openzipkin/zipkin:3.3
    container_name: zipkin
    hostname: zipkin
    restart: "on-failure"
    deploy:
      resources:
        limits:
          memory: "512m"
          cpus: "1"
    env_file:
      - .env
    environment:
      JAVA_TOOL_OPTIONS: ""
    ports:
      - "9411:9411"
    expose:
      - 9411
    networks:
      camila_product_network:

volumes:
  camila_product_mongodb_data:
  camila_product_couchbase_data:
  camila_product_backend_tmp:
  camila_gateway_tmp:
  camila_discovery_tmp:
  camila_admin_tmp:
  camila_config_tmp:
  keycloak_config:
  keycloak_data:
  grafana_data:

networks:
  camila_product_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1
