<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.camila.core</groupId>
    <artifactId>camila-services</artifactId>
    <version>1.0.0</version>
  </parent>

  <groupId>com.camila.api</groupId>
  <artifactId>camila-product-api</artifactId>
  <name>camila-product-api</name>
  <description>REST API for Camila Product Service</description>

  <dependencies>
    <!-- Spring Boot Core -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Spring Boot Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Spring Boot Data -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-couchbase</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.couchbase.client</groupId>
          <artifactId>java-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-couchbase-reactive</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.couchbase.client</groupId>
          <artifactId>java-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.couchbase.client</groupId>
      <artifactId>java-client</artifactId>
      <version>${couchbase-java-client.version}</version>
    </dependency>

    <!-- Spring Boot Communication -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-rsocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-graphql</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.graphql-java</groupId>
          <artifactId>graphql-java</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.micrometer</groupId>
          <artifactId>context-propagation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Spring Cloud -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.woodstox</groupId>
          <artifactId>woodstox-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>

    <!-- GraphQL -->
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java</artifactId>
      <version>${graphql-java.version}</version>
    </dependency>
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java-extended-scalars</artifactId>
      <version>${graphql-java-extended-scalars.version}</version>
    </dependency>

    <!-- Observability -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-zipkin</artifactId>
    </dependency>

    <!-- gRPC -->
    <dependency>
      <groupId>net.devh</groupId>
      <artifactId>grpc-server-spring-boot-starter</artifactId>
      <version>${grpc-server-spring-boot-starter.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf-java.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${io-grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${io-grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${io-grpc.version}</version>
    </dependency>

    <!-- API Documentation -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
      <version>${springdoc-openapi.version}</version>
    </dependency>

    <!-- Utilities -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jspecify</groupId>
      <artifactId>jspecify</artifactId>
      <version>${jspecify.version}</version>
    </dependency>

    <!-- Development Tools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo.spring3x</artifactId>
      <version>${de.flapdoodle.embed.mongo.spring3x.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <version>${archunit-junit5.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.instancio</groupId>
      <artifactId>instancio-junit</artifactId>
      <version>${instancio-junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JMH -->
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <version>${jmh.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- GraphQL Testing -->
    <dependency>
      <groupId>org.springframework.graphql</groupId>
      <artifactId>spring-graphql-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Cucumber -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-spring</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>${junit-platform-suite.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Testcontainers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>couchbase</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- gRPC Testing -->
    <dependency>
      <groupId>net.devh</groupId>
      <artifactId>grpc-client-spring-boot-starter</artifactId>
      <version>${grpc-server-spring-boot-starter.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Runtime Dependencies -->
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>chaos-monkey-spring-boot</artifactId>
      <version>${chaos-monkey-spring-boot.version}</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Core Plugins -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code Quality -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
          <annotationProcessorPaths>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>3.5.0</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context-indexer</artifactId>
              <version>${spring-framework.version}</version>
            </path>
            <path>
              <groupId>org.openjdk.jmh</groupId>
              <artifactId>jmh-generator-annprocess</artifactId>
              <version>${jmh.version}</version>
            </path>
            <dependency>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>0.2.0</version>
            </dependency>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Amapstruct.defaultComponentModel=spring</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>merge-results</id>
            <goals>
              <goal>merge</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
              <excludes>
                <exclude>**/input/grpc/**</exclude>
                <exclude>*/input/rest/api/**</exclude>
                <exclude>**/input/rest/dto/**</exclude>
                <exclude>**/input/security/*Config**</exclude>
                <exclude>**/*MapperImpl**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Versioning -->
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
      </plugin>

      <!-- API Generation -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-api-docs</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/api/product.yml</inputSpec>
              <generatorName>spring</generatorName>
              <configOptions>
                <reactive>true</reactive>
                <useTags>true</useTags>
                <openApiNullable>false</openApiNullable>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useResponseEntity>false</useResponseEntity>
                <responseWrapper>ResponseEntity</responseWrapper>
                <library>spring-boot</library>
                <basePackage>${project.groupId}.product.infrastructure.adapter.input.rest</basePackage>
                <apiPackage>${project.groupId}.product.infrastructure.adapter.input.rest.api</apiPackage>
                <modelPackage>${project.groupId}.product.infrastructure.adapter.input.rest.dto</modelPackage>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- gRPC -->
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf-java.version}:exe:${os.detected.classifier}</protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${io-grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
            <configuration>
              <pluginParameter>jakarta_omit</pluginParameter>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- POM sorting -->
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <version>${sortpom-maven-plugin.version}</version>
        <configuration>
          <createBackupFile>false</createBackupFile>
          <expandEmptyElements>false</expandEmptyElements>
          <keepBlankLines>true</keepBlankLines>
          <nrOfIndentSpace>2</nrOfIndentSpace>
          <sortPlugins>groupId,artifactId</sortPlugins>
          <verifyFail>stop</verifyFail>
        </configuration>
      </plugin>
    </plugins>

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcpkix-jdk18on</artifactId>
          <version>1.78.1</version>
        </dependency>
        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk18on</artifactId>
          <version>1.78.1</version>
        </dependency>
        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bctls-jdk18on</artifactId>
          <version>1.78.1</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <verbose>true</verbose>
              <skipNativeTests>true</skipNativeTests>
              <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              <buildArgs>
                <buildArg>--verbose</buildArg>
                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                <buildArg>
                  -H:ReflectionConfigurationResources=META-INF/native-image/reflect-config.json
                </buildArg>
                <buildArg>
                  -H:ResourceConfigurationResources=META-INF/native-image/resource-config.json
                </buildArg>
                <buildArg>
                  -H:SerializationConfigurationResources=META-INF/native-image/serialization-config.json
                </buildArg>
                <buildArg>
                  -H:DynamicProxyConfigurationResources=META-INF/native-image/proxy-config.json
                </buildArg>
                <buildArg>-H:JNIConfigurationResources=META-INF/native-image/jni-config.json
                </buildArg>
                <buildArg>
                  -H:PredefinedClassesConfigurationResources=META-INF/native-image/predefined-classes-config.json
                </buildArg>

                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
                <buildArg>
                  --initialize-at-run-time=org.bouncycastle,java.net.InetAddress,java.net.Inet4Address,java.net.Inet6Address
                </buildArg>
                <buildArg>--enable-http</buildArg>
                <buildArg>--enable-https</buildArg>
                <buildArg>--enable-preview</buildArg>
              </buildArgs>
              <jvmArgs>
                <arg>--add-opens=java.base/java.lang=ALL-UNNAMED</arg>
                <arg>--add-opens=java.base/java.io=ALL-UNNAMED</arg>
                <arg>--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED</arg>
                <arg>-Dspring.profiles.active=pre</arg>
                <arg>-Xmx16g</arg>
              </jvmArgs>
            </configuration>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jib</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>${jib-maven-plugin.version}</version>
            <configuration>
              <from>
                <image>eclipse-temurin:21-jdk-alpine</image>
              </from>
              <to>
                <image>docker.io/library/${project.name}-serveless</image>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
              </to>
              <container>
                <jvmFlags>
                  <jvmFlag>-Xms512m</jvmFlag>
                  <jvmFlag>-Xmx2048m</jvmFlag>
                  <jvmFlag>-Xdebug</jvmFlag>
                </jvmFlags>
                <mainClass>com.camila.api.ProductApiApplication</mainClass>
                <ports>
                  <port>31080</port>
                </ports>
                <labels>
                  <entorn>int</entorn>
                </labels>
                <format>OCI</format>
                <environment>
                  <SERVER_PORT>31080</SERVER_PORT>
                  <SPRING_PROFILES_ACTIVE>int</SPRING_PROFILES_ACTIVE>
                  <LANG>en_US.utf8</LANG>
                  <LANGUAGE>en_US.utf8</LANGUAGE>
                  <LC_ALL>en_US.utf8</LC_ALL>
                </environment>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>quality-check</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs-maven-plugin.version}</version>
            <configuration>
              <includeFilterFile>../src/main/resources/spotbugs-security-include.xml</includeFilterFile>
              <excludeFilterFile>../src/main/resources/spotbugs-security-exclude.xml</excludeFilterFile>
              <effort>Medium</effort>
              <htmlOutput>true</htmlOutput>
              <xmlOutput>true</xmlOutput>
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>1.13.0</version>
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>${checkstyle.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>validate</id>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>merge-results</id>
                <goals>
                  <goal>merge</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <excludes>
                    <exclude>**/input/grpc/**</exclude>
                    <exclude>**/input/rest/api/**</exclude>
                    <exclude>**/input/rest/dto/**</exclude>
                    <exclude>**/input/security/*Config**</exclude>
                    <exclude>**/*MapperImpl**</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${dependency-check-maven.version}</version>
            <configuration>
              <skipProvidedScope>true</skipProvidedScope>
              <skipRuntimeScope>true</skipRuntimeScope>
              <failOnError>false</failOnError>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs-maven-plugin.version}</version>
            <configuration>
              <includeFilterFile>../src/main/resources/spotbugs-security-include.xml</includeFilterFile>
              <excludeFilterFile>../src/main/resources/spotbugs-security-exclude.xml</excludeFilterFile>
              <effort>Medium</effort>
              <htmlOutput>true</htmlOutput>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin.version}</version>
            <configuration>
              <configLocation>../src/main/resources/checkstyle.xml</configLocation>
              <linkXRef>false</linkXRef>
              <excludes>
                **/input/grpc/**,**/input/rest/api/**,**/input/rest/dto/**,**/input/security/*Config**,**/*MapperImpl**
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${maven-pmd-plugin.version}</version>
            <configuration>
              <linkXRef>false</linkXRef>
              <excludes>
                <exclude>**/input/grpc/**</exclude>
                <exclude>**/generated-sources/protobuf/**</exclude>
                <exclude>**/input/rest/api/**</exclude>
                <exclude>**/input/rest/dto/**</exclude>
                <exclude>**/input/security/*Config**</exclude>
                <exclude>**/*MapperImpl**</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>${maven-project-info-reports-plugin.version}</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>summary</report>
                  <report>dependencies</report>
                  <report>plugins</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
              <excludes>
                <exclude>**/input/grpc/**</exclude>
                <exclude>*/input/rest/api/**</exclude>
                <exclude>**/input/rest/dto/**</exclude>
                <exclude>**/input/security/*Config**</exclude>
                <exclude>**/*MapperImpl**</exclude>
              </excludes>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>${versions-maven-plugin.version}</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>dependency-updates-report</report>
                  <report>plugin-updates-report</report>
                  <report>property-updates-report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${dependency-check-maven.version}</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>aggregate</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>error-prone</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <source>21</source>
              <target>21</target>
              <encoding>UTF-8</encoding>
              <annotationProcessorPaths>
                <path>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-configuration-processor</artifactId>
                  <version>3.5.0</version>
                </path>
                <path>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>1.6.3</version>
                </path>
                <path>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>1.18.38</version>
                </path>
                <!-- Uses the index to improve runtime startup -->
                <path>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-context-indexer</artifactId>
                  <version>6.2.5</version>
                </path>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>2.38.0</version>
                </path>
                <path>
                  <groupId>org.openjdk.jmh</groupId>
                  <artifactId>jmh-generator-annprocess</artifactId>
                  <version>${jmh.version}</version>
                </path>
                <dependency>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok-mapstruct-binding</artifactId>
                  <version>0.2.0</version>
                </dependency>
              </annotationProcessorPaths>
              <showWarnings>true</showWarnings>
              <compilerArgs>
                <arg>-Amapstruct.defaultComponentModel=spring</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>--should-stop=ifError=FLOW</arg>
                <arg>-Xplugin:ErrorProne
                  -XepExcludedPaths:.*/jmh_generated/.*|.*/input/grpc/.*|.*/rest/api/.*|.*/rest/dto/.*|.*/generated-sources/.*
                </arg>
              </compilerArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>pitest</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>${maven-compiler-plugin.version}</version>
              <configuration>
                <showWarnings>true</showWarnings>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>flatten-maven-plugin</artifactId>
              <version>${flatten-maven-plugin.version}</version>
              <configuration>
                <updatePomFile>true</updatePomFile>
                <flattenMode>resolveCiFriendliesOnly</flattenMode>
              </configuration>
              <executions>
                <execution>
                  <id>flatten</id>
                  <goals>
                    <goal>flatten</goal>
                  </goals>
                  <phase>package</phase>
                </execution>
                <execution>
                  <id>flatten.clean</id>
                  <goals>
                    <goal>clean</goal>
                  </goals>
                  <phase>clean</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-maven</artifactId>
              <version>${pitest-maven.version}</version>
              <configuration>
                <verbose>true</verbose>
                <threads>6</threads>
                <timeoutFactor>1.50</timeoutFactor>
                <timeoutConstant>5000</timeoutConstant>
                <failWhenNoMutations>false</failWhenNoMutations>
                <timestampedReports>false</timestampedReports>
                <features>
                  <feature>+EXPORT</feature>
                  <feature>+CLASSLIMIT(limit[12])</feature>
                </features>
                <mutators>
                  <mutator>CONSTRUCTOR_CALLS</mutator>
                  <mutator>NON_VOID_METHOD_CALLS</mutator>
                  <mutator>FALSE_RETURNS</mutator>
                  <mutator>TRUE_RETURNS</mutator>
                  <mutator>VOID_METHOD_CALLS</mutator>
                  <mutator>REMOVE_CONDITIONALS_ORDER_ELSE</mutator>
                  <mutator>NULL_RETURNS</mutator>
                  <mutator>PRIMITIVE_RETURNS</mutator>
                  <mutator>REMOVE_CONDITIONALS_EQUAL_IF</mutator>
                  <mutator>REMOVE_CONDITIONALS_EQUAL_ELSE</mutator>
                  <mutator>REMOVE_CONDITIONALS_ORDER_IF</mutator>
                  <mutator>NEGATE_CONDITIONALS</mutator>
                  <mutator>EMPTY_RETURNS</mutator>
                  <mutator>CONDITIONALS_BOUNDARY</mutator>
                </mutators>
                <excludedClasses>
                  <param>**.*Mapper*</param>
                  <param>**.grpc.*</param>
                  <param>**.config.*</param>
                  <param>**.*Config</param>
                  <param>**.rest.api.*</param>
                  <param>**.rest.dto.*</param>
                </excludedClasses>
                <excludedTestClasses>
                  <param>**.architecture.*</param>
                  <param>**.behaviour.*</param>
                  <param>**.benchmark.*</param>
                  <param>**.grpc.*</param>
                  <param>**.ProductCouchbaseContainerConfig</param>
                </excludedTestClasses>
                <avoidCallsTo>
                  <avoidCallsTo>org.slf4j</avoidCallsTo>
                  <avoidCallsTo>java.util.logging</avoidCallsTo>
                  <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
                </avoidCallsTo>
              </configuration>
              <dependencies>
                <dependency>
                  <groupId>org.pitest</groupId>
                  <artifactId>pitest-junit5-plugin</artifactId>
                  <version>1.2.2</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest-maven.version}</version>
            <executions>
              <execution>
                <id>pitest</id>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <phase>test-compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
